import com.rameses.annotations.*
import com.rameses.common.*
import java.rmi.server.UID;
import com.rameses.util.*;
import com.rameses.io.*;
import com.rameses.services.extended.*;

class IndividualEntityInterceptor  {

	@ActiveDB("entity")
	def	em; 

	@Service('DateService')
	def dtSvc;

	@After( pattern="EntityService.getColumns", eval="'individual'.equalsIgnoreCase(args[0].type)" )
	public void getColumns(evt) {
		def cols = evt.result;
		cols.addAll([
			[name:'name', caption:'Name'], 
			[name:'address', caption:'Address'], 				
			[name:'gender', caption:'Gender', width:50, resizable:false, alignment:'center'], 
			[name:'birthdate', caption:'Birth Date', width:70, resizable:false, alignment:'center'], 
			[name:'tin', caption:'XTIN']	
		]);
	}

	@Before(pattern="EntityService.(create|update)",  eval="'individual'.equalsIgnoreCase(args[0].type)", index=10 )
	public void beforeCreate( evt ) {
		def entity = evt.args[0];
		entity.name = entity.lastname+', '+entity.firstname; 
		if (entity.middlename) entity.name += ' '+entity.middlename;
	}

	@After(pattern="EntityService.create", eval="'individual'.equalsIgnoreCase(args[0].type)" )
	public void afterCreate( evt ) {
		def entity = evt.result;
		em.create( entity, 'individual');
	}

	@After(pattern="EntityService.update", eval="'individual'.equalsIgnoreCase(args[0].type)" )
	public void afterUpdate( evt ) {
		def entity = evt.result;
		em.update( entity, 'individual');
	}

	@After(pattern="EntityService.open",  eval="'individual'.equalsIgnoreCase(args[0].type)")
	public void afterOpen( evt ) {
		def entity = evt.result;
		entity.putAll ( em.read(entity, 'individual') );
		if (entity.birthdate){
			def birthyear = dtSvc.getYear( entity.birthdate )
			entity.age = dtSvc.serverYear - birthyear
		}		
	}

}
