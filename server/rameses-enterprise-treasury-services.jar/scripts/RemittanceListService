import com.rameses.annotations.*;
import com.rameses.util.*;
import java.rmi.server.*;
import com.rameses.common.*
import com.rameses.services.extended.*

class RemittanceListService extends AbstractListService {

	@ActiveDB("remittance")
	def em; 

	String schemaName = "remittance";
	
	@Env
	def env;

	@ProxyMethod
	public def getColumns( def p ) {
		return [
			[name:"txnno", caption:"Remittance No", width:120, resizable:false],
			[name:"dtposted", caption:"Remittance Date", width:120, resizable:false],
			[name:"collector.name", caption:"Collector"],
			[name:"totalcash", caption:"Total Cash", type:"decimal"],
			[name:"totalnoncash", caption:"Total Noncash", type:"decimal"],
			[name:"amount", caption:"Amount", type:"decimal"],
			[name:"liquidated", caption:"Liquidated", type:"checkbox", checkedValue:1, uncheckedValue:0],
		];	
	}	


	public def getList(params) {
		params._pagingKeys = 'r.objid'
		params.searchtext = (params.searchtext ? params.searchtext : '') +'%'
		params.collectorid  = '%'
		if( params._tag == 'bycollector')
			params.collectorid = env.USERID 
				
		def list = em.getList(params)
		if(! list ) list = em.getListBySeries(params)
		if(!list && params._tag == 'all') list = em.getListByCollector( params ) 


		return list
	}	
	
}
