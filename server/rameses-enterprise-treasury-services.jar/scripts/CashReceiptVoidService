import com.rameses.annotations.*;
import com.rameses.util.*;
import java.rmi.server.*;
import com.rameses.common.*
import com.rameses.services.extended.*

class CashReceiptVoidService  {

	@PersistenceContext("main")
	def em;

	@Env
	def env;
	
	@Service("DateService")
	def dateService;
	
	@Service("CashBookPostService")
	def cashBookSvc;
	
	
	@ProxyMethod
	public def post( def p ) {
		def v = [objid: "VOID"+new UID()];
		v.postedby = [ objid:env.USERID, name:env.FULLNAME ];
		v.receiptid = p.receipt.objid;
		v.reason = p.reason;
		v.txndate = dateService.serverDate;
		
		em.create("cashreceipt:void", v );
		//summarize receipts by fund, locate the fund and update 
		def z = p.receipt.items.groupBy{ it.item.fund.objid };
		z.each { k, c->
			println k ;
			def entry = [:]
			entry.fundid = k;
			entry.fundtitle = c[0].item.fund.title;   //get the first element 
			entry.subacctid = p.receipt.collector.objid;
			entry.refid = v.objid;
			entry.refno = p.receipt.receiptno;
			entry.refdate = v.txndate;
			entry.reftype = "cashreceipt:void";
			entry.particulars = "VOID " + p.reason;
			entry.amount = c.sum{ it.amount };
			cashBookSvc.postCR( entry ); 
		}
		return p;
	}	
		
		
}
