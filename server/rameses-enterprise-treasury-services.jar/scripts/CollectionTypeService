import com.rameses.annotations.*;
import com.rameses.util.*;
import java.rmi.server.*;
import com.rameses.common.*
import com.rameses.services.extended.*

class CollectionTypeService extends ActiveCrudListService {

	@ActiveDB("collectiontype")
	def em;
	
	@ProxyMethod
	public def getColumns( def o ) {
		return[
			[name:'name', caption:'Name' ],
			[name:'title', caption:'Title' ],
			[name:'formno', caption:'Form No' ],
			[name:'handler', caption:'Handler' ],
		];
	}

	void beforeList(o) {
		o.searchtext = (o.searchtext ? o.searchtext : '') +'%'
	}
	
	//must return a collection of elements with fields [formno and formtype]
	//this is impt for associating handlers. Used by collection type.
	@ProxyMethod
	public def getFormTypes() {
		return em.getFormTypes();
	}

	//used by cash receipt initial
	@ProxyMethod
	public def getCollectionTypes(def o) {
		return em.findAllByFormNo(o);
	}

	@ProxyMethod
	public def getFormTypesSerial() { 
		return em.getFormTypesSerial(); 
	}

	@ProxyMethod
	public def getFormTypesCashticket() { 
		return em.getFormTypesCashticket(); 
	}

	@ProxyMethod
	public def getFormTypesForBatch() { 
		return em.getFormTypesForBatch(); 
	}

	@ProxyMethod
	public def findAllByFormNoForBatch(def o) {
		return em.findAllByFormNoForBatch(o);
	}
		
}
