import com.rameses.annotations.*;
import com.rameses.util.*;
import java.rmi.server.*;
import com.rameses.common.*
import com.rameses.services.extended.*

class StockRequestService extends ActiveCrudListService {

	@ActiveDB("stockrequest")
	def em;

	@Service("SequenceService") 
	def seqSvc;

	@Service("DateService") 
	def dateSvc;

	@Env
	def env;

	@ProxyMethod
	public def getNodes( def o ) {
		return [
			[state:'OPEN', caption:'Open' ],
			[state:'CLOSED', caption:'Closed' ]
		];
	}

	@ProxyMethod
	public def getColumns( def o ) {
		return[
			[name:'reqno', caption:'Req No' ],
			[name:'dtfiled', caption:'Date Filed' ],
			[name:'reqtype', caption:'Item Type' ],
			[expression:'#{item.requester.firstname} #{item.requester.lastname}', caption:'Requester', type:'label'],
			[name:'state', caption:'State' ],
		];
	}
	
	
	void beforeCreate( def o ) {
		// o.requester = [objid:env.USERID, name:env.FULLNAME, title:env.JOBTITLE];
		o.org = [objid:env.ORGID, name:env.ORGNAME];
		o.reqno = "RIS" + seqSvc.getNextFormattedSeries("RIS");
		o.dtfiled = dateSvc.serverDate;
		o.state = "OPEN";
	}
	
	void afterCreate( o ) {
		o.items.each {
			it.objid = "STKREQITEM"+new UID();
			it.parentid = o.objid;
			it.qtyreceived = 0;
			em.create( it, "item" );
		}
	}

	//use this to open the file
	void afterList(o,list) {
		list.each {
			it._filetype = "stockrequest:"+it.reqtype.toLowerCase();
		}
	}

	//use to display handler per each item
	void afterOpen( o ) {
		o.items = em.getItems(o);
		o.items.each {
			it.handler = it.item.type?.toLowerCase();
		}
	}


}
