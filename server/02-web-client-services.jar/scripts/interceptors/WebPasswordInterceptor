import com.rameses.annotations.*;
import com.rameses.util.*;

class WebPasswordInterceptor 
{
	@Service('WebBasicUserService')
	def userSvc;

	@Service('WebBasicSessionService')
	def sessionSvc;

    @Env
    def env;

	@After(pattern="PasswordService.changePassword", eval="env.CLIENTTYPE=='web'") 
	public void changePassword( evt ) {
		if (!env.SESSIONID) throw new Exception('Please specify SESSIONID');

		def sessInfo = sessionSvc.getSession( env.SESSIONID );
		if (!sessInfo) throw new Exception('INVALID_SESSION');

		def userInfo = userSvc.getInfo( sessInfo.username );
		if (!userInfo) throw new Exception('INVALID_USER_ACCOUNT'); 

		def params = evt.args[0];
		if (params.type == 'changepwd') {
			def encoldpwd = Encoder.MD5.encode(params.oldpassword, sessInfo.username); 
			if (encoldpwd != userInfo.pwd) throw new Exception('Old password is incorrect'); 
		}
		def encpwd = Encoder.MD5.encode(params.newpassword, sessInfo.username);  
		def result = evt.result;
		result.username = sessInfo.username;
		result.oldpassword = userInfo.pwd;		
		result.newpassword = encpwd;
		userSvc.changePassword( result ); 
	} 

	@After(pattern="PasswordService.resetPassword", eval="env.CLIENTTYPE=='web'") 
	public void resetPassword( evt ) {
		userSvc.resetPassword( evt.result ); 
	}	
}  

