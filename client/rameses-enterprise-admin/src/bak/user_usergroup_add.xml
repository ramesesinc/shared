<workunit>
    <invokers>
        <invoker type="user-usergroup:add1" caption="Add User Group" action="init" target="popup"/>
        
        <invoker type="formActions" caption="Cancel" action="doCancel" shortcut="ctrl X" immediate="true"/>
        <invoker type="formActions" caption="Back" action="doShowDefault" mnemonic="b" immediate="true" visibleWhen="#{openerObject != null}"/>
        <invoker type="formActions" caption="Next" action="doShowHandler" mnemonic="n" immediate="false" visibleWhen="#{nextButtonVisible == true}"/> 
        <invoker type="formActions" caption="Submit" action="doSubmit" mnemonic="s" immediate="false" visibleWhen="#{submitButtonVisible == true}"/>  
    </invokers>
   
    <code>
    <![CDATA[
        import com.rameses.rcp.annotations.*;
        import com.rameses.rcp.common.*;
        import com.rameses.osiris2.client.*;
        import com.rameses.osiris2.common.*;

        public class AddUserGroupController {
            
            @Service('UserSecuritygroupService') 
            def svc;
            
            //sets by the caller 
            def entity, handler; 
            
            def usergroupItems;
            def selectedUsergroup;
            def selectedSecuritygroup;
            def openerObject;
        
            @PropertyChangeListener 
            def propertyListener = [
                'selectedUsergroup': { 
                    securitygroupHandler.reload(); 
                } 
            ];
                        
            void init() {
                usergroupItems = svc.getUsergroups();
            } 
            
            boolean isNextButtonVisible() {
                if (!selectedUsergroup.orgclass) return false; 
                
                return (openerObject == null && selectedSecuritygroup != null); 
            }
            boolean isSubmitButtonVisible() {
                if (!selectedUsergroup.orgclass) return true; 
                
                return (openerObject != null && selectedSecuritygroup != null); 
            } 
            
            def securitygroupHandler = [
                fetchList: {o-> 
                    def usergroupid = selectedUsergroup?.objid;
                    if (!usergroupid) return null;
                    
                    return svc.getSecuritygroups([usergroupid: usergroupid]); 
                } 
            ] as BasicListModel;
        
            def doCancel() {
                if (MsgBox.confirm('Are you sure you want to close this window?')) 
                    return '_close'; 
                else 
                    return null; 
            }
            
            def doShowDefault() { 
                openerObject = null;
                return 'default'
            }
            
            def doShowHandler() { 
                if (!selectedSecuritygroup) throw new Exception('Please select a security group'); 
                
                def orgclass = selectedSecuritygroup.orgclass;
                if (orgclass) {
                    def invtype = 'user-usergroup-org:open';
                    def params = [entity: selectedSecuritygroup]; 
                    params.entity.usergrouptitle = selectedUsergroup.title;
                    
                    openerObject = InvokerUtil.lookupOpener(invtype, params); 
                    return 'handlerpage';
                } 
                else { 
                    openerObject = null;                     
                } 
            } 
            
            def doSubmit() {
                def params = [
                    securitygroupid: selectedSecuritygroup.objid,
                    usergroupid: selectedSecuritygroup.usergroupid,
                    orgid: selectedSecuritygroup.org?.objid,
                    orgclass: selectedSecuritygroup.orgclass, 
                    userid: entity.objid 
                ];
                svc.addSecuritygroup(params); 
                if (handler) handler(); 
                
                return '_close';
            } 
        }
    ]]>
    </code>
    
    <pages>
        <page template="com.rameses.admin.user.UserSecurityGroupInitPage"/>
        <page template="com.rameses.admin.user.UserSecurityGroupHandlerPage" name="handlerpage"/>
    </pages>
</workunit>