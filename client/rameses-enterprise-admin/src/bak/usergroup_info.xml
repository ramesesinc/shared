<workunit>
    <invokers>
        <invoker type="user-usergroup:add" caption="Add User Group" action="create" target="popup"/>
        <invoker type="user-usergroup:edit" caption="Edit User Group" action="edit" target="popup"/>
        <!--
        <invoker type="formActions" caption="Cancel" action="doCancel" shortcut="ctrl X" immediate="true"/>
        <invoker type="formActions" caption="Back" action="doShowDefault" mnemonic="b" immediate="true" visibleWhen="#{openerObject != null}"/>
        <invoker type="formActions" caption="Next" action="doShowHandler" mnemonic="n" immediate="false" visibleWhen="#{nextButtonVisible == true}"/> 
        <invoker type="formActions" caption="Submit" action="doSubmit" mnemonic="s" immediate="false" visibleWhen="#{submitButtonVisible == true}"/>  
        -->
    </invokers>
   
    <code>
    <![CDATA[
        import com.rameses.rcp.annotations.*;
        import com.rameses.rcp.common.*;
        import com.rameses.osiris2.client.*;
        import com.rameses.osiris2.common.*;
        import java.rmi.server.*;

        public class UserGroupInfoController {
        
            @Service('UserSecuritygroupService') 
            def secSvc;
            
            def entity;
            def usergroup;
            def mode;
            def saveHandler;

            void create() {
                mode = "create";
                usergroup = [objid:"UGM"+ new UID()];
                usergroup.user = entity;
            }
            
            void edit() {
                mode = "edit";
            }
            
            def getLookupUsergroup() {
                return InvokerUtil.lookupOpener( "usergroup:lookup", [
                    onselect: { o->
                        usergroup.usergroupid = o.objid;
                        usergroup.domain = o.domain;
                        usergroup.role = o.role;
                    }
                ]);
            }
            
            def getLookupOrg() {
                return InvokerUtil.lookupOpener( "org:lookup", [
                    onselect:{o->
                        usergroup.org = o;
                    }
                ] );
            }
            
            def getSecuritygroups() {
                def usergroupid = usergroup.usergroupid;
                if (!usergroupid) return null;
                return secSvc.getSecuritygroups([usergroupid: usergroupid]);             
            }

            
            def doOk() {
                if(saveHandler) saveHandler(usergroup);
                return "_close";
            }
            
            def doCancel() {
                return "_close";
            }
            
        }
    ]]>
    </code>
    
    <pages>
        <page template="com.rameses.admin.user.UsergroupInfoPage"/>
    </pages>
</workunit>