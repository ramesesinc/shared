<workunit extends="wtemplates/ListController.xml">
    
    <invokers>
        <invoker folderid="/explorer/txnmgmt/treasury/af" action="init" caption="AF Controls" 
        role="AFO" permission="afcontrol.view"/>
        
        <invoker type="formActions" caption="Transfer" action="transfer" visibleWhen="#{selectedEntity!=null}"/>
        <invoker type="formActions" caption="Change Mode" action="changeMode" visibleWhen="#{selectedEntity!=null}"/>
        <invoker type="formActions" caption="Activate" action="activate" visibleWhen="#{selectedEntity!=null}"/>
        
        <invoker type="formActions" caption="Add Beg.Balance" action="addBeginBal" />
        
        <invoker type="contextMenu" caption="Open" action="open"/>
        <invoker type="contextMenu" caption="Transfer" action="transfer"/>
        <invoker type="contextMenu" caption="Change Mode" action="changeMode"/>
        <invoker type="contextMenu" caption="Activate" action="activate"/>
        <invoker type="contextMenu" caption="Cancel Series" action="cancelSeries"/>
        <invoker type="contextMenu" caption="Change Assignee" action="changeAssignee"/>
    </invokers>
    
    <code>
        <![CDATA[    
        import com.rameses.rcp.annotations.*;
        import com.rameses.rcp.common.*;
        import com.rameses.osiris2.client.*;
        import com.rameses.osiris2.common.*;
        
        class AFControlMgmtController extends ListController 
        {        
            String serviceName = "AFControlMgmtService";
            String entityName = "afcontrol";
            String formTarget = "popup";
            boolean allowCreate = false;
            
            @Service("AFService")
            def afSvc;

            @Service("AFControlService")
            def afControlSvc;
            
            def afTypes;
            
            @PropertyChangeListener
            def listener = [
                "query.af": { o->   
                    reload();
                }
            ]

            void init() {
                afTypes = afSvc.getList([:]);
            }
                
            def transfer() {
                return InvokerUtil.lookupOpener("collector:lookup", [
                    "query.excludecollector": selectedEntity.collector,
                    onselect: { o->
                        if(MsgBox.confirm("You are about to transfer series to "+o.objid+".Confirm?")) {
                            afControlSvc.transferCollector(selectedEntity,o.objid);
                            reload();
                        }
                    }
                ]);
                
            }
            
            def changeMode() {
                return InvokerUtil.lookupOpener( "afcontrol:changemode", 
                    [entity:selectedEntity, saveHandler: {reload()} ]);    
            }
            
            def activate() {
                if(MsgBox.confirm( "You are about to activate this control for this collector. Proceed?" )) {
                    def m = [objid:selectedEntity.objid, 
                        collector:selectedEntity.collector,
                        assignee:selectedEntity.assignee];
                    afControlSvc.activateControl(m);
                    reload();
                }
            }
            
            def cancelSeries() {
                return InvokerUtil.lookupOpener( "afcontrol:cancelseries", 
                    [entity:selectedEntity, saveHandler: {reload()} ]);
            }
            
            def addBeginBal() {
                return InvokerUtil.lookupOpener( "afcontrol:beginbalance",
                    [
                        saveHandler: { reload(); }
                    ]
                ); 
            }
            
        }
        ]]>
    </code>
    
     <pages>
        <page name="queryform" template="com.rameses.gov.treasury.afcontrol.AFControlQuery"/>
    </pages>
</workunit>