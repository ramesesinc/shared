<workunit>
    
   <invokers>
         <invoker type="remittance:create" caption="Remittance" action="init" target="window"/>
         <invoker type="quick_launcher" code="REM" caption="Remittance" action="open" target="window"/>
         <invoker type="remittance:open" caption="Remittance (Open)" action="open" target="window"/>

         <invoker type="formActions" caption="Close" name="_close"  />
         <invoker type="formActions" caption="Next" name="doEntry" visibleWhen="#{state == 'initial' &amp;&amp; mode=='create'}" />
         <invoker type="formActions" caption="Submit" name="submit" visibleWhen="#{state == 'entry' &amp;&amp; mode=='create'}" />
         <invoker type="formActions" caption="View RCD" name="viewRCD" visibleWhen="#{state == 'saved' || mode=='open'}" />

     </invokers>
   
   <code>
       <![CDATA[
        import com.rameses.osiris2.common.*;
        import com.rameses.rcp.common.*;
        import com.rameses.rcp.annotations.*;
        import java.rmi.server.*;
        import com.rameses.osiris2.client.*;
        import com.rameses.util.*;
        
        class RemittanceController {
        
            @Binding
            def binding;
        
            def state = "initial";
            
            @Service("RemittanceService")
            def service;
        
            String title = "Remittance";
            
            def entity;
            def cashBreakdown;
            def mode = 'create';
            
            def total = 0.0;
            def breakdown = 0.0;
            
            def init() {
                state = "initial";
                entity = service.init();
                return "initial";
            }
            
            void open(){
                mode = "open";
                entity = service.open(entity);
                cashBreakdown = InvokerUtil.lookupOpener("cash:breakdown", [entries: entity.cashbreakdown] );    
                total = entity.totalcash + entity.totalnoncash;
                breakdown = entity.cashbreakdown.sum{it.amount};
            }
            
            def listModel = [
                fetchList: { o->
                    return entity.items;
                }
            ] as BasicListModel;
            
            def checkModel = [
                fetchList: {
                    return entity.checks;
                }
            ] as BasicListModel;
            
            def doEntry() {
                state = "entry";
                entity.cashbreakdown = [];
                cashBreakdown = InvokerUtil.lookupOpener("cash:breakdown", [
                    entries: entity.cashbreakdown, onupdate: { o->
                        breakdown = o;
                        total = entity.totalnoncash+breakdown;
                        binding.refresh("breakdown|total");
                    }] );
                return "default";
            }
            
            void submit() {
                if( breakdown != entity.totalcash )
                    throw new Exception("Cash breakdown must equal total cash");
            
                if( MsgBox.confirm("You are about to submit this remittance. Please ensure the entries are correct")) {
                    entity = service.post( entity );
                    state = 'saved'
                    MsgBox.alert("Posting successful");
                }
            }
            
            def viewRCD() {
                return InvokerUtil.lookupOpener("remittance:rcd")
            }
            
        }      
       ]]>
   </code>
   
   <pages>
       <page name="initial" template="com.rameses.enterprise.treasury.remittance.RemittanceInitPage" />
       <page name="default" template="com.rameses.enterprise.treasury.remittance.RemittancePage" />
   </pages>
   
</workunit>
