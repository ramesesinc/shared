<workunit>
    <invokers>
        <invoker type="cashreceipt:select-afcontrol" caption="Select Accountable Form" target="popup"/>
        <invoker type="cashreceipt-initial:formActions" caption="Select AF" target="popup" action="init"/>
    </invokers>
    
    <code>
        <![CDATA[    
        import com.rameses.rcp.annotations.*
        import com.rameses.rcp.common.*
        import com.rameses.osiris2.client.*
        import com.rameses.osiris2.common.*
        import com.rameses.enterprise.treasury.cashreceipt.*
        
        class  SelectAFController  {
            
            @Service("AFSerialControlService")
            def svc;
            
            def handler;
            def selectedItem;
            def selectedAssignee;
            def entity;
            def list;
            
            void init() {
                if(!entity.formno)
                    throw new Exception("Please select an accountable form first");
            }
            
            def listModel = [
                fetchList: { o->
                    list = svc.getOpenIssuanceList( [af:entity.formno, txnmode:entity.txnmode] );
                    return list;
                },
                getContextMenu: { o,colName->
                    def list = [];
                    if(o.active==0) list.add( [value:'Activate',id:'activate'] );
                    if(o.active==1) list.add([value:'Deactivate',id:'deactivate']);                    
                    list.add([value:'Assign',id:'assign']);
                    return list;
                },
                callContextMenu: { o,m->
                    if( m.id == "activate") {
                        def z = [:];
                        z.objid = o.objid;
                        z.txnmode = entity.txnmode;
                        z.afid = entity.formno
                        svc.activateControl(z);
                        listModel.reload();
                    }
                    else if(m.id == "deactivate") {
                        svc.deactivateControl([objid: o.objid]);
                        listModel.reload();
                    }
                    else if(m.id=="assign") {
                        return InvokerUtil.lookupOpener("subcollector:lookup", [
                            onselect:{x->
                                svc.assignToSubcollector( [objid:o.objid, assignee:x] );
                                listModel.reload();
                            }
                        ] );
                    }
                }
            ] as BasicListModel;
            
            
            def assigneeListModel = [
                fetchList: { o->
                    list = svc.getAssigneeIssuanceList( [af:entity.formno, txnmode:entity.txnmode] );
                    return list;
                },
                getContextMenu: { o,colName->
                    def list = [];
                    if(o.active==0) list.add( [value:'Activate',id:'activate'] );
                    if(o.active==1) list.add([value:'Deactivate',id:'deactivate']);                    
                    list.add([value:'Assign',id:'assign']);
                    return list;
                },
                callContextMenu: { o,m->
                    listModel.reload();
                }
            ] as BasicListModel;
            
            
            def doClose() {
                return "_close";
            }
        }
        ]]>
        
    </code>
    
    <pages>
        <page template="com.rameses.gov.treasury.cashreceipt.SelectAFPage"/>
        <page name="assignTo" template="com.rameses.gov.treasury.cashreceipt.AFAssignToPage"/>
    </pages>
    
</workunit>