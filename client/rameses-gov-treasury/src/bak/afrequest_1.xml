<workunit>
    <invokers>
        <!--
        <invoker type="afrequest:create" caption="AF Requisition" action="create" target="window"/>
        <invoker folderid="/txn/treasury" action="create" caption="Request Accountable Form" target="window"/>

        <invoker type="afrequest:open" action="open" caption="AF Request" target="window"/>        
        -->
        
        <!--
        <invoker folderid="/explorer/txn/treasury/af" action="create" caption="AF Requisition"/> 
        -->
        
        <invoker type="navActions" action="addReceipt" caption="Add Receipt" visibleWhen="#{state == 'iraf' }"/>
    </invokers>
    
    <code>
        <![CDATA[
        
            import com.rameses.rcp.annotations.*
            import com.rameses.rcp.common.*
            import com.rameses.osiris2.client.*
            import com.rameses.osiris2.common.*

            class AFRequestController extends PageFlowController {

                @Service("AFRequestService")
                def afrequestSvc;
                
                def entity;
                def requestTypes;
                def requestType;
                
                def selectedItem;
                def receipt;
                boolean showall = true;
                def mode = "create";
                
                @FormId
                public String getDocId() {
                    return ( mode == "create" )? "new-afrequest" : "afrequest"+entity.objid;
                }
                
                @FormTitle
                public String getDocTitle() {
                    return ( mode == "create" )? "New Request" : entity.objid;
                }
                
                def create() {
                   entity =  [items:[]];
                   requestTypes = InvokerUtil.lookupOpeners( "afrequest:type", [request: request ]);
                   return super.start();
                }

                
                
                def open() {
                    request = afrequestSvc.open(entity);
                    receipt = request.remove("receipt");
                    if(!receipt) {
                        mode = "for-receipt";
                    }    
                    else  {
                        if(receipt.state == "OPEN") {
                            mode = "view-receipt";
                        }
                        else {
                            mode = "view-posted"
                        }
                    }    
                    return super.start();
                }

                void saveRequest() {
                    if(!request.items)
                        throw new Exception("Please add at least one item");
                    request = afrequestSvc.create(request);
                    reqItemModel.reload();
               }
                
                def reqItemModel = [
                    fetchList: {o->
                        request.items;
                    }
                ] as BasicListModel;

                def addReqItem() {
                    return InvokerUtil.lookupOpener( 
                        "afrequest:additem", [  
                            request: request,
                            saveHandler: { 
                                reqItemModel.reload();
                            }
                         ]
                     );
                }
                
                void createReceipt() {
                    receipt = [items:[]];
                }
               
                def issuedItemModel = [
                    fetchList: { o->
                        if(showall) return receipt.items;
                        if(!selectedItem) return [];
                        return receipt.items.findAll { it.af == selectedItem.af };
                    }
                ] as BasicListModel;
                
                def addReceipt() {
                    def openerName = ( request.txntype != "PURCHASE" ) ? "afreceipt:issueitem"  : "afreceipt:additem" ;
                    return InvokerUtil.lookupOpener( 
                        openerName, [  
                            request:request, 
                            receipt: receipt,
                            saveHandler: {
                                reqItemModel.reload();
                                issuedItemModel.reload();
                            }
                     ]);
                }
                
                void saveReceipt() {
                    def r = [request:request, receipt: receipt ];
                    r = afrequestSvc.saveReceipt( r );    
                    request = r.request;
                    receipt = r.receipt;
                }
                
                
            }
        ]]>
    </code>
    
    <pageflow>
        
        <start>
            <transition to="initial" cond="#{mode=='create'}"/>
            <transition to="for-receipt" cond="#{mode=='for-receipt'}"/>
            <transition to="view-receipt" cond="#{mode=='view-receipt'}"/>
            <transition to="posted" cond="#{mode=='view-posted'}"/>
        </start>
        
        <page name="initial" title="AF Requisition Initial">
            <transition to="end" caption="Close"/>
            <transition to="create" caption="Next"/>
        </page>
        
        <page name="create" title="AF Requisition Details">
            <transition to="end" caption="Close"/>
            <transition to="for-receipt" caption="Submit" action="saveRequest" confirm="You are about to submit this request. Continue?"/>
        </page>
        
        <page name="for-receipt" title="AF For Receipt">
            <transition to="end" caption="Close"/>
            <transition to="iraf" caption="Receive" action="createReceipt"/>
        </page>
        
        <page name="iraf" title="AF Receipt">
            <transition to="end" caption="Close" />
            <transition to="posted" caption="Submit" action="saveReceipt" confirm="You are about to update the AF inventory. Proceed?"/>
        </page>
        
        <page name="posted" title="AF Requsition (Closed)">
            <transition to="end" caption="Close"/>
        </page>
        
        <end/>
    </pageflow>
    <pages>
        <page name="initial" template="com.rameses.gov.treasury.af.AFRequestInitialPage"/>
        <page name="create" template="com.rameses.gov.treasury.af.AFRequestPage"/>
        <page name="for-receipt" template="com.rameses.gov.treasury.af.AFRequestPage"/>
        <page name="iraf" template="com.rameses.gov.treasury.af.IRAFPage"/>
        <page name="posted" template="com.rameses.gov.treasury.af.IRAFPage"/>
    </pages>
</workunit>