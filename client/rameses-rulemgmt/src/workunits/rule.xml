<workunit>
    <invokers>
        <invoker type="rule:create" caption="Rule Information" action="initCreate" target="popup"/>
        <invoker type="rule:open" caption="Rule Information" action="open" target="popup"/>
        
        <invoker type="extActions" caption="Next" action="doNext" mnemonic="n" visibleWhen="#{initPageShown==true}"/> 
    </invokers>
   
    <code>
    <![CDATA[
        import com.rameses.rcp.annotations.*;
        import com.rameses.rcp.common.*;
        import com.rameses.osiris2.client.*;
        import com.rameses.osiris2.common.*;

        class RuleController extends CRUDController { 

            String prefixId = "RULE";
        
            @Service('XRuleMgmtService') 
            def service;
            def node;

            boolean initPageShown = false;
            def rulegroups;
            def rulegrouptitle;
         
            boolean isAllowSave() {
                return (initPageShown? false: true); 
            } 
            
            def initCreate() { 
                init();
                initPageShown = true;
                return 'initpage';
            }
            
            void afterCreate(o) { 
                o.salience = 100; 
                o.rulesetid = node?.name;
                if (rulegroups == null) 
                    rulegroups = service.getRulegroups([rulesetid: o.rulesetid]); 
            } 
            
            void beforeOpen(o) {
                o.rulesetid = node?.name; 
                if (rulegroups == null)                 
                    rulegroups = service.getRulegroups([rulesetid: o.rulesetid]); 
            } 
            
            
            
            def selectedRulegroup;
            def rulegroupHandler = [
                fetchList: { 
                    if (rulegroups == null) {
                        rulegroups = service.getRulegroups([rulesetid: node?.name]); 
                    }
                    return rulegroups;
                } 
            ] as BasicListModel;
            
            def doNext() {
                if (!selectedRulegroup) 
                    throw new Exception('Please select a rulegroup');
                    
                entity.rulegroupid = selectedRulegroup.name; 
                rulegrouptitle = selectedRulegroup.title;
                initPageShown = false;
                return 'default';
            } 
            
            
            def selectedRulefact;
            def rulefactHandler = [
                fetchList: { 
                    if (entity.conditions == null) entity.conditions = [];

                    return entity.conditions; 
                }
            ] as BasicListModel;
            
            def addRulefact() {
                def params = [
                    service: service, 
                    entity: entity,
                    handler: { rulefactHandler.reload(); }
                ];
                return InvokerUtil.lookupOpener('rulecondition:create', params);  
            } 
        }
   ]]>
   </code>
   
   <pages>
       <page template="com.rameses.rules.ui.RulePage"/>
       <page template="com.rameses.rules.ui.RuleInitPage" name="initpage"/>
   </pages>
</workunit>