<!-- REQUISITION ISSUE SLIP -->
<workunit>
    <invokers>
       <invoker type="stockrequest:issuance:formActions" caption="Issue" action="create" 
            visibleWhen="#{mode=='read' &amp;&amp; entity?.state == 'OPEN'}" role="AFO"/>

       <invoker type="formActions" caption="Close" action="_exit" visibleWhen="#{mode=='read'}"/>
       <invoker type="formActions" caption="Back" action="revert" visibleWhen="#{mode=='create'}" />
       <invoker type="formActions" caption="Next" action="process" visibleWhen="#{mode=='initial'}" />
       <invoker type="formActions" caption="Submit" action="save" visibleWhen="#{mode=='create'}"/>
    </invokers>
    
    <code>
        <![CDATA[    
        import com.rameses.rcp.annotations.*
        import com.rameses.rcp.common.*
        import com.rameses.osiris2.client.*
        import com.rameses.osiris2.common.*
        import java.rmi.server.*;
        import com.rameses.util.*;
        class  StockIssueController  {
            
            @Service("StockInventoryService")
            def service;
        
            @Service("StockIssueService")
            def issueSvc;
            
            String title;
            def entity;
            def selectedItem;
            def mode = "initial";
            
            void create() {
                def e = [items: [] ];
                e.objid = "STKISS"+new UID();
                e.request = [objid: entity.objid, reqno:entity.reqno];
                e.reqtype = entity.reqtype;
                e.issueto = entity.requester;
                e.itemclass = entity.itemclass;
                entity.items.each {
                    def o = [:];
                    o.item = it.item;
                    o.unit = it.unit;
                    o.handler = it.handler;
                    o.qtyrequested = it.qty;
                    o.qtyissued = 0;
                    e.items << o;
                }
                title = "Stock Issuance";
                entity = e;
            }
            
            def itemModel = [
                onColumnUpdate: { o,col->
                    if(o.qtyissued > o.qtyrequested )
                        throw new Exception("Qty issued must be less or equal to qty requested");
                },
                fetchList: { o->
                    return entity.items;
                }
            ] as EditorListModel;
            
            def process() {
                if( !entity.items.find{ it.qtyissued > 0  })
                    throw new Exception("Please process at least one item");
                entity = service.getAvailable(entity);   
                itemModel.reload();
                mode = "create";
                return "result";
            }
            
            def revert() {
                mode = "initial";
                return "default";
            }
            
            void save() {
                if(MsgBox.confirm("You are about to submit this transaction. Continue?")) {
                    entity = issueSvc.create(entity);
                    mode ="read";
                }
            }
            
            String getRenderer() {
                if(!selectedItem) return "";
                return TemplateProvider.instance.getResult( "com/rameses/handlers/stockissue/" + selectedItem.handler +".gtpl", [entity:selectedItem] );            
            }
            
        }
        ]]>
        
    </code>
    
    <pages>
        <page template="com.rameses.enterprise.inventory.stock.StockIssuePage"/>
        <page name="result" template="com.rameses.enterprise.inventory.stock.StockIssueResultPage"/>
    </pages>
    
</workunit>
